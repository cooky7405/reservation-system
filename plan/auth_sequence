# 인증 시스템 시퀀스

## 1. 회원가입 프로세스
```sequence
Client -> Server: POST /auth/signup
Server -> Database: 사용자 정보 저장
Database -> Server: 저장 완료
Server -> Email Service: 인증 이메일 발송
Server -> Client: 회원가입 성공 응답
Client -> Server: POST /auth/verify-email
Server -> Database: 이메일 인증 상태 업데이트
Server -> Client: 이메일 인증 완료 응답
```

### 회원가입 상세 프로세스
1. 클라이언트가 사용자 정보를 서버로 전송 (POST /auth/signup)
   - Username
   - Password
   - PhoneNumber
   - CompanyID
2. 서버는 사용자 정보 유효성 검사
3. 데이터베이스에 사용자 정보 저장
4. 인증 이메일 발송
5. 클라이언트는 이메일 인증 요청 (POST /auth/verify-email)
6. 서버는 이메일 인증 상태 업데이트

## 2. 로그인 프로세스
```sequence
Client -> Server: POST /auth/login
Server -> Database: 사용자 인증
Database -> Server: 인증 결과
Server -> Client: JWT 토큰 발급 (accessToken, refreshToken)
```

### 로그인 상세 프로세스
1. 클라이언트가 로그인 정보 전송
   - Username
   - Password
2. 서버는 사용자 인증
3. 인증 성공 시 JWT 토큰 발급
   - accessToken (만료시간: 1시간)
   - refreshToken (만료시간: 2주)

## 3. 토큰 갱신 프로세스
```sequence
Client -> Server: API 요청 with accessToken
Server -> Client: 401 Unauthorized (토큰 만료)
Client -> Server: POST /auth/refresh with refreshToken
Server -> Client: 새로운 accessToken 발급
Client -> Server: 원래 API 요청 재시도
```

### 토큰 갱신 상세 프로세스
1. API 요청 시 401 에러 발생
2. 클라이언트는 refreshToken으로 새로운 accessToken 요청
3. 서버는 refreshToken 유효성 검사 후 새로운 accessToken 발급
4. 클라이언트는 새로운 accessToken으로 API 재요청

## 4. 로그아웃 프로세스
```sequence
Client -> Server: POST /auth/logout
Server -> Database: refreshToken 무효화
Server -> Client: 로그아웃 성공 응답
```

### 로그아웃 상세 프로세스
1. 클라이언트가 로그아웃 요청
2. 서버는 해당 사용자의 refreshToken 무효화
3. 클라이언트는 저장된 토큰 삭제

## API 엔드포인트 상세

### POST /auth/signup
Request:
```json
{
    "username": "string",
    "password": "string",
    "phoneNumber": "string",
    "companyId": "number"
}
```
Response:
```json
{
    "message": "회원가입이 완료되었습니다. 이메일을 확인해주세요.",
    "userId": "number"
}
```

### POST /auth/verify-email
Request:
```json
{
    "token": "string"  // 이메일로 전송된 인증 토큰
}
```
Response:
```json
{
    "message": "이메일 인증이 완료되었습니다."
}
```

### POST /auth/login
Request:
```json
{
    "username": "string",
    "password": "string"
}
```
Response:
```json
{
    "accessToken": "string",
    "refreshToken": "string",
    "user": {
        "id": "number",
        "username": "string",
        "role": "string"
    }
}
```

### POST /auth/refresh
Request:
```json
{
    "refreshToken": "string"
}
```
Response:
```json
{
    "accessToken": "string"
}
```

### POST /auth/logout
Request: Authorization 헤더에 accessToken 필요
Response:
```json
{
    "message": "로그아웃되었습니다."
}
``` 